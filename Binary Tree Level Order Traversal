# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        bfsq = collections.deque()
        k = []
        bfsq.append(root)
        while bfsq:
            qlen = len(bfsq)
            l =[]
            for i in range(qlen):
                po = bfsq.popleft()
                if po:
                    l.append(po.val)
                    bfsq.append(po.left)
                    bfsq.append(po.right)
            if l :        
                k.append(l)        
        return k        
