class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        stack = []
        res = []

        def back(opened,closed):
            if opened == closed == n:
                res.append("".join(stack))
            if opened < n:
                stack.append("(")
                back(opened+1,closed)
                stack.pop()
            if closed < opened:
                stack.append(")")
                back(opened,closed+1)
                stack.pop()
        back(0,0)

        return res       
